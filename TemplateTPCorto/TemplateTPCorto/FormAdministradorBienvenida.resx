<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btbAutorizaciones.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>