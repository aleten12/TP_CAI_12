<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btbAutorizaciones.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABOhJREFUeF7tmj2IJFUUhXt6dgYVFgRRjARBFBQ2VNFAZDXRSDAVxUQRMTAxMTAQ
        kQ0UVFQMDA1MNBDdTRVB0UVYRDcQHMZE1Pn/6enuuqfkPO8t75S9XeU6zBqcD95UV/Wrabinzn3vvleD
        gRBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBDi/0dVVQMzi7YAYBBNHDN1XZfAm9lwd3c3RBkC
        WAiRxDFAEUIMACcYeJ6b2Y387NcX5ZQjhkGOFqSA0wV0Az/fYmafmxkAvM405s45EaKEaLP+p+ggHOBP
        /XBtba04AUBJRwCW+J0H/gkz2wdQs5kZj98COOXi8R7ey/sWzWxxZWWlXFda60lLkMFoNApXNK2u65MA
        PkhCTOkQM5v4eWVmzyZHNU7Z399vJgESpAcM3Hg8Dge8COALAM8DuBPA7QCeA/Az3eBCMFfxMwWhQLxW
        3GJmnwB4BMDNAB4C8BqArwHc4yIN278vWqQnmi6YeJDZGPhxSk1TDhr+ucHP2bcKBwFop7WPKXhVVQsa
        TzqI3G5mJ81sw4NYhAlX/BX35pw6MPhMV+UkrruDmL54zu8OXJBzTF2rq6sa4LtoOWQrPfHZBdkJIUy0
        LMoh91A4v/YZ0yLrF/6WmEMWxMyKIB7jSD+NGCnoZwG8BeCHEKF1T7QQ5CwF2dnZkUO66BIkuYDHXTO7
        P5ZQfEb2qgedwW+L0ghycHAgQfrQJYinnjKTAvAChaiqihV7LgQvuGB5YJ/pEKWsDvoIks4f4BPOos/r
        liWvPV7ywJe6ZJYgckhPegoST/7j3vcqr8RDkA898JyRzRLkHAXZ3t6WIF10CeIzrCKImZ0HsMz+UdkD
        eDD6JSTI5TJPkNaxDOwALgJ4sq7rh83sZQ94M/C3RPmHIBpDOpgnSEuUEYDHzOw7Py8NwBsAXvFrMfhf
        UhA5pIMsCAvDGc6ItSpObwdbW1vse7qqqqcB3MprdV1zP+SiBz9EkCCXQ2vp5JAgUQwCWAdwnQe/CJj2
        QZb9/me8b1kJbgmiwrAvLYdsXiLlnJ9MJhSBTih7HaxFYv/Dl+/vSP1jqnzIIZubmxKkizkOaeoP35Q6
        FbMrihP7HO4SHrl0z76ckQUxpnw0nU55n1Z7u2DqYYAnk8nVZvaLBzXWDPPs6VcO6gCuGY/Hy3t7e6xB
        lgDcBODNGOhdyPgcq8ZnXPTiJjEHT1fxksK7HtixB7IRJQ3Uv5vZj2b2vZn9BGCUBIiFyEMpq6qq0y7I
        UIJ04OkmXmC4zVNN83SnIFOUPIMqzc+bzau4J+2FfMp0pc2pf0HLJY9GYH3PPLvD4/43fo3EPRQt7rlQ
        1/X1PjOTIH2JgZkpxY/3AfgmOYBuKUHPAvBPa6zJa1nvA7jWRS4O5P8WPYnZE1/dYeA4TQXA2uKPlIZK
        wBn7lkDx9gnbVwDuTTVLpMP2T4ouOJVlvqco6+vr4ZwbzOy9FHCKQgE4pY3Bn8L8BuCp5LaoWSTGfyFq
        C29lE8qv3Q3gyyRMM7ADeIeVPPvSFRSDRSCRGEdEFIx8yr1CL+9v8e1FX1B8G8AZAHclEcu7v9HEERNP
        twsx3NjYiDSWBVN6Om5aaay8s+szsrKeFf0kxhUiVnxVVwghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
        IYQQQgghrjh/Aoc6Li0wxN9oAAAAAElFTkSuQmCC
</value>
  </data>
</root>